@using RealTimeEntityFramework.Web;
@using RealTimeEntityFramework.Web.Models.ViewModels;

@model PostsIndexViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(Model.Posts, post => post.Category.Name)
            </th>
            <th>
                @Html.DisplayNameFor(Model.Posts, post => post.Title)
            </th>
            <th>
                @Html.DisplayNameFor(Model.Posts, post => post.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(Model.Posts, post => post.PublishOn)
            </th>
            <th>
                @Html.DisplayNameFor(Model.Posts, post => post.Content)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="postsBody" data-contentUrl="@Url.Action("IndexRows")" data-categoryId="@Model.CategoryId">
        @Html.Partial("_IndexRows", Model.Posts)
    </tbody>
</table>

@section Scripts {

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/scripts/jquery.signalR-2.0.1.js")
@Scripts.Render("~/signalr/js")

<script>

    var blogHub = $.connection.blogHub,
        $postsBody = $("#postsBody"),
        contentUrl = $postsBody.attr("data-contentUrl"),
        categoryId = $postsBody.attr("data-categoryId");

    blogHub.client.entityUpdated = function (change) {
        console.log("Entity change notification received!");
        console.log(change);

        // Refresh the table of posts
        $.get(contentUrl, function (postsHtml) {
            $postsBody.html(postsHtml);
        });
    };

    $.connection.hub.logging = true;
    $.connection.hub.start().done(function () {
        // Invoke the method on the server to subscribe to updates
        blogHub.server.startNotificationsForPosts(categoryId).done(function () {
            console.log("Now subscribed to notification groups!");
        });
    });

</script>

}